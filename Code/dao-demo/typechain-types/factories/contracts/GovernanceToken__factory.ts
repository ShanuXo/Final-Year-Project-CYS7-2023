/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../../contracts/GovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405269d3c21bcecceda1000000600a553480156200002057600080fd5b506040518060400160405280600b81526020016a25b0b737b7b72a37b5b2b760a91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600b81526020016a25b0b737b7b72a37b5b2b760a91b8152506040518060400160405280600281526020016112d560f21b8152508160039081620000b09190620007ca565b506004620000bf8282620007ca565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525050600a546200016290339062000168565b620008d8565b6200017f82826200018360201b620009b91760201c565b5050565b6200019a82826200023a60201b62000a491760201c565b6001600160e01b03620001ae620003078216565b11156200021b5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000234600962000b146200030d60201b178362000324565b50505050565b6001600160a01b038216620002925760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000212565b8060026000828254620002a69190620008ac565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200017f60008383620004bb565b60025490565b60006200031b8284620008ac565b90505b92915050565b825460009081908181156200038457620003538762000345600185620008c2565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015262000399565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350620003b784868860201c565b9250600082118015620003d05750805163ffffffff1643145b156200042757620003ec83620004d360201b62000b201760201c565b620003fe8862000345600186620008c2565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055620004ac565b86604051806040016040528062000449436200054260201b62000b8d1760201c565b63ffffffff1681526020016200046a86620004d360201b62000b201760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620004b6838383620005a960201b62000bf21760201c565b60006001600160e01b038211156200053e5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000212565b5090565b600063ffffffff8211156200053e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000212565b620005c1838383620004b660201b62000c0d1760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620004b692918216911683818314801590620006005750600081115b15620004b6576001600160a01b038316156200068d576001600160a01b0383166000908152600860209081526040822082916200064a919062000718901b62000c12178562000324565b91509150846001600160a01b0316600080516020620025a9833981519152838360405162000682929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620004b6576001600160a01b038216600090815260086020908152604082208291620006d191906200030d901b62000b14178562000324565b91509150836001600160a01b0316600080516020620025a9833981519152838360405162000709929190918252602082015260400190565b60405180910390a25050505050565b60006200031b8284620008c2565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200075157607f821691505b6020821081036200077257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004b657600081815260208120601f850160051c81016020861015620007a15750805b601f850160051c820191505b81811015620007c257828155600101620007ad565b505050505050565b81516001600160401b03811115620007e657620007e662000726565b620007fe81620007f784546200073c565b8462000778565b602080601f8311600181146200083657600084156200081d5750858301515b600019600386901b1c1916600185901b178555620007c2565b600085815260208120601f198616915b82811015620008675788860151825594840194600190910190840162000846565b5085821015620008865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808201808211156200031e576200031e62000896565b818103818111156200031e576200031e62000896565b60805160a05160c05160e0516101005161012051611c81620009286000396000610fea015260006110390152600061101401526000610f6d01526000610f9701526000610fc10152611c816000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636fcfff45116100c3578063a457c2d71161007c578063a457c2d7146102d0578063a9059cbb146102e3578063c3cda520146102f6578063d505accf14610309578063dd62ed3e1461031c578063f1127ed81461032f57600080fd5b80636fcfff451461023e57806370a08231146102665780637ecebe001461028f5780638e539e8c146102a257806395d89b41146102b55780639ab24eb0146102bd57600080fd5b80633644e515116101155780633644e515146101c757806339509351146101cf5780633a46b1a8146101e2578063587cde1e146101f55780635c19a95c146102205780635d6418471461023557600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036c565b60405161016791906118f6565b60405180910390f35b61018361017e366004611960565b6103fe565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b336600461198a565b610418565b60405160128152602001610167565b61019761043c565b6101836101dd366004611960565b61044b565b6101976101f0366004611960565b61046d565b6102086102033660046119c6565b6104c0565b6040516001600160a01b039091168152602001610167565b61023361022e3660046119c6565b6104de565b005b610197600a5481565b61025161024c3660046119c6565b6104eb565b60405163ffffffff9091168152602001610167565b6101976102743660046119c6565b6001600160a01b031660009081526020819052604090205490565b61019761029d3660046119c6565b61050d565b6101976102b03660046119e1565b61052b565b61015a610557565b6101976102cb3660046119c6565b610566565b6101836102de366004611960565b6105ec565b6101836102f1366004611960565b610667565b610233610304366004611a0b565b610675565b610233610317366004611a63565b6107a7565b61019761032a366004611acd565b61090b565b61034261033d366004611b00565b610936565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610167565b60606003805461037b90611b40565b80601f01602080910402602001604051908101604052809291908181526020018280546103a790611b40565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b60003361040c818585610c1e565b60019150505b92915050565b600033610426858285610d42565b610431858585610db6565b506001949350505050565b6000610446610f60565b905090565b60003361040c81858561045e838361090b565b6104689190611b8a565b610c1e565b60004382106104975760405162461bcd60e51b815260040161048e90611b9d565b60405180910390fd5b6001600160a01b03831660009081526008602052604090206104b99083611087565b9392505050565b6001600160a01b039081166000908152600760205260409020541690565b6104e8338261117d565b50565b6001600160a01b03811660009081526008602052604081205461041290610b8d565b6001600160a01b038116600090815260056020526040812054610412565b600043821061054c5760405162461bcd60e51b815260040161048e90611b9d565b610412600983611087565b60606004805461037b90611b40565b6001600160a01b03811660009081526008602052604081205480156105d9576001600160a01b03831660009081526008602052604090206105a8600183611bd4565b815481106105b8576105b8611be7565b600091825260209091200154600160201b90046001600160e01b03166105dc565b60005b6001600160e01b03169392505050565b600033816105fa828661090b565b90508381101561065a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161048e565b6104318286868403610c1e565b60003361040c818585610db6565b834211156106c55760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161048e565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b03881691810191909152606081018690526080810185905260009061073f906107379060a00160405160208183030381529060405280519060200120611213565b858585611261565b905061074a81611289565b86146107945760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b604482015260640161048e565b61079e818861117d565b50505050505050565b834211156107f75760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161048e565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108268c611289565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061088182611213565b9050600061089182878787611261565b9050896001600160a01b0316816001600160a01b0316146108f45760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161048e565b6108ff8a8a8a610c1e565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff841690811061097a5761097a611be7565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6109c38282610a49565b6002546001600160e01b031015610a355760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161048e565b610a436009610b14836112b1565b50505050565b6001600160a01b038216610a9f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048e565b8060026000828254610ab19190611b8a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b1060008383611402565b5050565b60006104b98284611b8a565b60006001600160e01b03821115610b895760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161048e565b5090565b600063ffffffff821115610b895760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161048e565b610c0d610bfe846104c0565b610c07846104c0565b8361140d565b505050565b60006104b98284611bd4565b6001600160a01b038316610c805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048e565b6001600160a01b038216610ce15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610d4e848461090b565b90506000198114610a435781811015610da95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048e565b610a438484848403610c1e565b6001600160a01b038316610e1a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048e565b6001600160a01b038216610e7c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048e565b6001600160a01b03831660009081526020819052604090205481811015610ef45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a43848484611402565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610fb957507f000000000000000000000000000000000000000000000000000000000000000046145b15610fe357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156110e15760006110a28461154a565b6110ac9085611bd4565b600088815260209020909150869082015463ffffffff1611156110d1578091506110df565b6110dc816001611b8a565b92505b505b8082101561112e5760006110f58383611632565b600088815260209020909150869082015463ffffffff16111561111a57809150611128565b611125816001611b8a565b92505b506110e1565b80156111675761115186611143600184611bd4565b600091825260209091200190565b54600160201b90046001600160e01b031661116a565b60005b6001600160e01b03169695505050505050565b6000611188836104c0565b905060006111ab846001600160a01b031660009081526020819052604090205490565b6001600160a01b0385811660008181526007602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610a4382848361140d565b6000610412611220610f60565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006112728787878761164d565b9150915061127f81611707565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b825460009081908181156112fd576112ce87611143600185611bd4565b60408051808201909152905463ffffffff81168252600160201b90046001600160e01b03166020820152611312565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061133284868863ffffffff16565b925060008211801561134a5750805163ffffffff1643145b1561138e5761135883610b20565b61136788611143600186611bd4565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790556113f8565b8660405180604001604052806113a343610b8d565b63ffffffff1681526020016113b786610b20565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b5050935093915050565b610c0d838383610bf2565b816001600160a01b0316836001600160a01b03161415801561142f5750600081115b15610c0d576001600160a01b038316156114bd576001600160a01b0383166000908152600860205260408120819061146a90610c12856112b1565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516114b2929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610c0d576001600160a01b038216600090815260086020526040812081906114f390610b14856112b1565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161153b929190918252602082015260400190565b60405180910390a25050505050565b60008160000361155c57506000919050565b600060016115698461184c565b901c6001901b9050600181848161158257611582611bfd565b048201901c9050600181848161159a5761159a611bfd565b048201901c905060018184816115b2576115b2611bfd565b048201901c905060018184816115ca576115ca611bfd565b048201901c905060018184816115e2576115e2611bfd565b048201901c905060018184816115fa576115fa611bfd565b048201901c9050600181848161161257611612611bfd565b048201901c90506104b98182858161162c5761162c611bfd565b046118e0565b60006116416002848418611c13565b6104b990848416611b8a565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561167a57506000905060036116fe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116ce573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116f7576000600192509250506116fe565b9150600090505b94509492505050565b600081600481111561171b5761171b611c35565b036117235750565b600181600481111561173757611737611c35565b0361177f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048e565b600281600481111561179357611793611c35565b036117e05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048e565b60038160048111156117f4576117f4611c35565b036104e85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048e565b600080608083901c1561186157608092831c92015b604083901c1561187357604092831c92015b602083901c1561188557602092831c92015b601083901c1561189757601092831c92015b600883901c156118a957600892831c92015b600483901c156118bb57600492831c92015b600283901c156118cd57600292831c92015b600183901c156104125760010192915050565b60008183106118ef57816104b9565b5090919050565b600060208083528351808285015260005b8181101561192357858101830151858201604001528201611907565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461195b57600080fd5b919050565b6000806040838503121561197357600080fd5b61197c83611944565b946020939093013593505050565b60008060006060848603121561199f57600080fd5b6119a884611944565b92506119b660208501611944565b9150604084013590509250925092565b6000602082840312156119d857600080fd5b6104b982611944565b6000602082840312156119f357600080fd5b5035919050565b803560ff8116811461195b57600080fd5b60008060008060008060c08789031215611a2457600080fd5b611a2d87611944565b95506020870135945060408701359350611a49606088016119fa565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611a7e57600080fd5b611a8788611944565b9650611a9560208901611944565b95506040880135945060608801359350611ab1608089016119fa565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611ae057600080fd5b611ae983611944565b9150611af760208401611944565b90509250929050565b60008060408385031215611b1357600080fd5b611b1c83611944565b9150602083013563ffffffff81168114611b3557600080fd5b809150509250929050565b600181811c90821680611b5457607f821691505b6020821081036112ab57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561041257610412611b74565b6020808252601f908201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604082015260600190565b8181038181111561041257610412611b74565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082611c3057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d589f246a9cd48c25d1228155ba5c2fb05354f2549279607ab73c5996884ebf664736f6c63430008110033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type GovernanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceToken__factory extends ContractFactory {
  constructor(...args: GovernanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernanceToken> {
    return super.deploy(overrides || {}) as Promise<GovernanceToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  override connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
